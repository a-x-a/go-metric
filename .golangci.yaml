# Options for analysis running.
run:
  # Number of CPUs to use when running golangci-lint.
  # Default: the number of logical CPUs in the machine
  # concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: false
  # List of build tags, all linters use it.
  # Default: []
  # build-tags:
  #   - mytag
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path,
  # including the path prefix if one is set.
  # Default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # Default: []

  #skip-dirs:
  #  - src/external_libs
  #  - autogenerated_by_my_lib

  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true

  #skip-dirs-use-default: false

  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # There is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not, please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # Default: []

  #skip-files:
  #  - ".*\\.my\\.go$"
  #  - lib/bad.go

  # If set, we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # Default: ""
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false, golangci-lint acquires file lock on start.
  # Default: false
  allow-parallel-runners: true
  # Allow multiple golangci-lint instances running, but serialize them around a lock.
  # If false, golangci-lint exits with an error if it fails to acquire file lock on start.
  # Default: false
  allow-serial-runners: true
  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.17
  go: "1.19"
  # Show statistics per linter.
  # Default: false
  show-stats: true

# output configuration options
output:
  # Format: colored-line-number|line-number|json|colored-tab|tab|checkstyle|code-climate|junit-xml|github-actions|teamcity
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.xml,json:stdout,colored-line-number"
  #
  # Default: colored-line-number
  format: colored-line-number
  # Print lines of code with issue.
  # Default: true
  # print-issued-lines: false
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: false
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false
  # Add a prefix to the output file references.
  # Default: ""
  path-prefix: ""
  # Sort results by: filepath, line and column.
  # Default: false
  sort-results: true
linters:
  # # Disable all linters.
  # # Default: false
  # disable-all: true
  # # Enable specific linter
  # # https://golangci-lint.run/usage/linters/#enabled-by-default
  # enable:
  #   - asasalint
  #   - asciicheck
  #   - bidichk
  #   - bodyclose
  #   - containedctx
  #   - contextcheck
  #   - cyclop
  #   - deadcode
  #   - decorder
  #   - depguard
  #   - dogsled
  #   - dupl
  #   - dupword
  #   - durationcheck
  #   - errcheck
  #   - errchkjson
  #   - errname
  #   - errorlint
  #   - execinquery
  #   - exhaustive
  #   - exhaustivestruct
  #   - exhaustruct
  #   - exportloopref
  #   - forbidigo
  #   - forcetypeassert
  #   - funlen
  #   - gci
  #   - ginkgolinter
  #   - gocheckcompilerdirectives
  #   - gochecknoglobals
  #   - gochecknoinits
  #   - gochecksumtype
  #   - gocognit
  #   - goconst
  #   - gocritic
  #   - gocyclo
  #   - godot
  #   - godox
  #   - goerr113
  #   - gofmt
  #   - gofumpt
  #   - goheader
  #   - goimports
  #   - golint
  #   - gomnd
  #   - gomoddirectives
  #   - gomodguard
  #   - goprintffuncname
  #   - gosec
  #   - gosimple
  #   - gosmopolitan
  #   - govet
  #   - grouper
  #   - ifshort
  #   - importas
  #   - inamedparam
  #   - ineffassign
  #   - interfacebloat
  #   - interfacer
  #   - ireturn
  #   - lll
  #   - loggercheck
  #   - maintidx
  #   - makezero
  #   - maligned
  #   - mirror
  #   - misspell
  #   - musttag
  #   - nakedret
  #   - nestif
  #   - nilerr
  #   - nilnil
  #   - nlreturn
  #   - noctx
  #   - nolintlint
  #   - nonamedreturns
  #   - nosnakecase
  #   - nosprintfhostport
  #   - paralleltest
  #   - perfsprint
  #   - prealloc
  #   - predeclared
  #   - promlinter
  #   - protogetter
  #   - reassign
  #   - revive
  #   - rowserrcheck
  #   - scopelint
  #   - sloglint
  #   - spancheck
  #   - sqlclosecheck
  #   - staticcheck
  #   - structcheck
  #   - stylecheck
  #   - tagalign
  #   - tagliatelle
  #   - tenv
  #   - testableexamples
  #   - testifylint
  #   - testpackage
  #   - thelper
  #   - tparallel
  #   - typecheck
  #   - unconvert
  #   - unparam
  #   - unused
  #   - usestdlibvars
  #   - varcheck
  #   - varnamelen
  #   - wastedassign
  #   - whitespace
  #   - wrapcheck
  #   - wsl
  #   - zerologlint
  # # Enable all available linters.
  # # Default: false
  enable-all: true
  # # Disable specific linter
  # # https://golangci-lint.run/usage/linters/#disabled-by-default
  disable:
    #   - asasalint
    #   - asciicheck
    #   - bidichk
    #   - bodyclose
    #   - containedctx
    #   - contextcheck
    #   - cyclop
    #   - deadcode
    #   - decorder
    - depguard
    #   - dogsled
    #   - dupl
    #   - dupword
    #   - durationcheck
    # - errcheck
    # - errchkjson
    # - errname
    # - errorlint
    #   - execinquery
    #   - exhaustive
    #   - exhaustivestruct
    #   - exhaustruct
    #   - exportloopref
    #   - forbidigo
    #   - forcetypeassert
    #   - funlen
    - gci
    #   - ginkgolinter
    #   - gocheckcompilerdirectives
    #   - gochecknoglobals
    #   - gochecknoinits
    #   - gochecksumtype
    #   - gocognit
    #   - goconst
    #   - gocritic
    #   - gocyclo
    #   - godot
    #   - godox
    #   - goerr113
    #   - gofmt
    - gofumpt
    #   - goheader
    - goimports
    #   - golint
    # - gomnd
    #   - gomoddirectives
    #   - gomodguard
    #   - goprintffuncname
    #   - gosec
    #   - gosimple
    #   - gosmopolitan
    #   - govet
    #   - grouper
    #   - ifshort
    #   - importas
    #   - inamedparam
    #   - ineffassign
    #   - interfacebloat
    #   - interfacer
    #   - ireturn
    - lll
    #   - loggercheck
    #   - maintidx
    #   - makezero
    #   - maligned
    #   - mirror
    #   - misspell
    #   - musttag
    #   - nakedret
    #   - nestif
    #   - nilerr
    #   - nilnil
    - nlreturn
    #   - noctx
    #   - nolintlint
    #   - nonamedreturns
    #   - nosnakecase
    #   - nosprintfhostport
    #   - paralleltest
    #   - perfsprint
    #   - prealloc
    #   - predeclared
    #   - promlinter
    #   - protogetter
    #   - reassign
    #   - revive
    #   - rowserrcheck
    #   - scopelint
    #   - sloglint
    #   - spancheck
    #   - sqlclosecheck
    #   - staticcheck
    #   - structcheck
    #   - stylecheck
    #   - tagalign
    #   - tagliatelle
    #   - tenv
    #   - testableexamples
    #   - testifylint
    #   - testpackage
    #   - thelper
    #   - tparallel
    #   - typecheck
    #   - unconvert
    #   - unparam
    #   - unused
    #   - usestdlibvars
    #   - varcheck
    #   - varnamelen
    #   - wastedassign
    #   - whitespace
    - wrapcheck
    - wsl
  #   - zerologlint
  # # Enable presets.
  # # https://golangci-lint.run/usage/linters
  # # Default: []
  # presets:
  #   - bugs
  #   - comment
  #   - complexity
  #   - error
  #   - format
  #   - import
  #   - metalinter
  #   - module
  #   - performance
  #   - sql
  #   - style
  #   - test
  #   - unused
  # # Enable only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  fast: true

linters-settings:
  gci:
    # DEPRECATED: use `sections` and `prefix(github.com/org/project)` instead.
    local-prefixes: github.com/a-x-a/go-metric
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot > alias`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/a-x-a/go-metric) # Custom section: groups all imports with the specified Prefix.
      - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
      - dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
      - alias # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
    # Skip generated files.
    # Default: true
    skip-generated: false
    # Enable custom order of sections.
    # If `true`, make the section order the same as the order of `sections`.
    # Default: false
    custom-order: true

  goimports:
    local-prefixes: github.com/a-x-a/go-metric

  gomnd:
    # don't include the "operation" and "assign"
    checks:
      - argument
      - case
      - condition
      - return
    ignored-numbers:
      - "0"
      - "1"
      - "2"
      - "3"
    ignored-functions:
      - strings.SplitN
# linters-settings:
#   depguard:
#     # Rules to apply.
#     #
#     # Variables:
#     # - File Variables
#     #   you can still use and exclamation mark ! in front of a variable to say not to use it.
#     #   Example !$test will match any file that is not a go test file.
#     #
#     #   `$all` - matches all go files
#     #   `$test` - matches all go test files
#     #
#     # - Package Variables
#     #
#     #  `$gostd` - matches all of go's standard library (Pulled from `GOROOT`)
#     #
#     # Default: Only allow $gostd in all files.
#     rules:
#       # Name of a rule.
#       main:
#         #   # Used to determine the package matching priority.
#         #   # There are three different modes: `original`, `strict`, and `lax`.
#         #   # Default: "original"
#         #   list-mode: lax
#         #   # List of file globs that will match this list of settings to compare against.
#         #   # Default: $all
#         files:
#           - $all
#           - !$test
#             #     - "!**/*_a _file.go"
#             #   # List of allowed packages.

#         allow:
#           - $gostd
#             #     - github.com/OpenPeeDeeP
#             #   # Packages that are not allowed where the value is a suggestion.
#             #   deny:
#             #     - pkg: "github.com/sirupsen/logrus"
#             #       desc: not allowed
#             # #     - pkg: "github.com/pkg/errors"
#             #       desc: Should be replaced by standard lib errors package
#       internal:
#         files:
#           - "**/internal/**/*.go"
#         allow:
#           - $gostd
